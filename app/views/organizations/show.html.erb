<div class="organization">
  <h1><%= @organization.title %>, <%= can?(:edit, @organization) %></h1>
  
  <%= render partial: "/persons/list", locals: { organization: @organization } %>
  
  <div id="container" class="drop" data-behavior="droppable">
    <div id="chart">
      <div class="nodes">
      </div>
    </div>
    <div id="persons">
      <div class="img new" data-behavior="person-new" data-url="<%= new_organization_identity_path(organization_id: @organization.id) %>"></div>
  
      <% @organization.identities.select(&:used?).each do |identity| %>
          <% person = identity.to_person %>
          <div class="img"<% if person.picture_url %> style="background-image: url(<%= person.picture_url %>)"<% end %> data-behavior="person-manage" data-identifier="<%= person.identifier %>" data-url="<%= manage_organization_identity_path(organization_id: @organization.id, id: person.identifier) %>"></div>
      <% end %>
    </div>
  </div>
  <div style="clear: both;"></div>
  
  <div class="sidebar" data-behavior="organization-sidebar">
    <div class="logo">
      <%= image_tag("ico-company-sample.jpg") %>
    </div>
    <div class="contents" data-behavior="contents">
      <%= simple_format @organization.description %>
      
      <ul class="unstyled">
        <li><%= link_to "About", "#" %></li>
        <li><%= link_to "Chart", "#" %></li>
        <li><%= link_to "People", "#" %></li>
        <li><%= link_to "Work Here", "#" %></li>
        <li><%= link_to "Contacts", "#" %></li>
        <li>
          <span class="icon-stack icon-verified"><i class="icon-certificate icon-stack-base"></i><i class="icon-ok icon-light"></i></span><%= link_to "digitaloctober.ru", "http://digitaloctober.ru" %>
        </li>
      </ul>
    </div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
    $(function() {

        var chart = new cc.Chart({
            title:  'My Cool Chart'
        })


        var n = new cc.Node({
            title: 'First Node'
        })

        var n2 = new cc.Node({
            title: 'Second Node'
        })

        var r = new cc.Relation({
            parent_id: chart.root.id(),
            child_id: n.id()
        })

        var r2 = new cc.Relation({
            parent_id: n.id(),
            child_id: n2.id()
        })

        chart.add_node(n)
        chart.add_node(n2)

        chart.add_relation(r)
        chart.add_relation(r2)

        chart.validate()

        function nodes(root, result) {
            result = (result || [])
            result.push(root)
            if (root.children)
                root.children.forEach(function(child) {
                    return nodes(child, result)
                })
            return result;
        }

        var container   = $('#chart .nodes')
        var offset      = container.offset()

        var svg = d3.select('#chart').insert('svg', '#chart .nodes')

        nodes(cc.test_tree_layout).forEach(function(node) {
            var v = $('<div>')
                .addClass('node')
                .attr('data-node', '1')
                .appendTo($('#chart .nodes'))
                .html(node.title)
                .width(node.width)
                .append($('<div>').addClass('before'))
                .append($('<div>').addClass('after'))

                v.offset({
                    left: offset.left + container.outerWidth() / 2 - v.outerWidth() / 2 + node.x,
                    top: offset.top + node.y * 125
                })

                if (node.parent) {
                    var x_shift = node.parent.children.indexOf(node) - node.parent.children.length / 2

                    var px = container.outerWidth() / 2 + node.parent.x + x_shift * 10 + 5
                    var py = node.parent.y * 125 + v.outerHeight() - 1
                    var nx = container.outerWidth() / 2 + node.x
                    var ny = node.y * 125 + 1


                    svg.append('path')
                        //.attr('d', 'M' + px + ',' + py + 'L' + nx + ',' + ny + 'Z')
                        .attr('d', d3.svg.diagonal()({ source: { x: px, y: py }, target: { x: nx, y: ny }}))
                        .attr('stroke', '#000')
                        .attr('stroke-width', 1.5)
                        .attr('fill', 'none')

                    svg.append('circle')
                        .attr('cx', px)
                        .attr('cy', py)
                        .attr('r', 3)

                    svg.append('circle')
                        .attr('cx', nx)
                        .attr('cy', ny)
                        .attr('r', 3)
                }

        })

    })
</script>
